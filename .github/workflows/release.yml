name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set version from tag or input
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${GITHUB_REF#refs/tags/}"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "VERSION_NUMBER=${VERSION#v}" >> $GITHUB_OUTPUT
        echo "Release version: $VERSION"
    
    - name: Build distribution packages
      run: |
        cd flutter_deps_manager
        chmod +x ./build.sh
        ./build.sh build --clean --version "${{ steps.version.outputs.VERSION_NUMBER }}"
        
    - name: List build artifacts
      run: |
        echo "Build artifacts:"
        find flutter_deps_manager/dist -type f -ls
        
    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: Flutter Dependencies Upgrade CLI ${{ steps.version.outputs.VERSION }}
        body_path: flutter_deps_manager/dist/RELEASE_NOTES.md
        draft: false
        prerelease: false
        files: |
          flutter_deps_manager/dist/archives/flutter-deps-upgrade-${{ steps.version.outputs.VERSION_NUMBER }}.tar.gz
          flutter_deps_manager/dist/archives/flutter-deps-upgrade-${{ steps.version.outputs.VERSION_NUMBER }}.zip
          flutter_deps_manager/dist/checksums.txt
          flutter_deps_manager/dist/installers/install.sh

  update-installer:
    needs: build-and-release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Set version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${GITHUB_REF#refs/tags/}"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "VERSION_NUMBER=${VERSION#v}" >> $GITHUB_OUTPUT
        
    - name: Update version in installer script
      run: |
        # Update only the VERSION line in our smart installer
        sed -i "s/VERSION=\".*\"/VERSION=\"${{ steps.version.outputs.VERSION_NUMBER }}\"/" flutter_deps_manager/install.sh
        # Verify the change
        grep "VERSION=" flutter_deps_manager/install.sh
        
    - name: Commit and push installer update
      run: |
        git config --local user.email "marnes@mukuru.com"
        git config --local user.name "MarnesMukuru"
        git add flutter_deps_manager/install.sh
        git commit -m "Update installer script for release ${{ steps.version.outputs.VERSION }}" || exit 0
        git push origin main
